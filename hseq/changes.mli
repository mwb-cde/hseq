(*----
  Copyright (c) 2010-2021 Matthew Wahab <mwb.cde@gmail.com>

  This Source Code Form is subject to the terms of the Mozilla Public
  License, v. 2.0. If a copy of the MPL was not distributed with this
  file, You can obtain one at http://mozilla.org/MPL/2.0/.
----*)

(** The changes made to a goal by a tactic are recorded as data
    embedded in the goal. A tactic can access the data by reading the
    [changes] field of the goal.
*)

(**
   The record holding information generated by tactics.
*)
type ftag_ty = (string)Tag.t

type t =
    {
      goal_tags: ftag_ty list;
      (** new sub-goals produced by the tactic. *)
      asm_tags: ftag_ty list;
      (** new assumption produced by the tactic. *)
      cncl_tags: ftag_ty list;
      (** new conclusions produced by the tactic. *)
      term_list: Term.term list
    (** new constants produced by the tactic. *)
    }

(** Make an empty changes record. *)
val empty: unit -> t

(** Accessors *)
val dest: t -> (ftag_ty list * ftag_ty list * ftag_ty list * Term.term list)
val goals: t -> ftag_ty list
val aforms: t -> ftag_ty list
val cforms: t -> ftag_ty list
val terms: t -> Term.term list

(** Construct a record of goal changes. *)
val make:
  ftag_ty list -> ftag_ty list -> ftag_ty list -> Term.term list -> t

(** [add chngs gs hs cs ts]: Append [gs], [hs], [cs] and [ts] to
    [r.goals], [r.aforms], [r.cforms] and [r.terms] respectively.  *)
val add:
  t -> ftag_ty list -> ftag_ty list -> ftag_ty list -> Term.term list
  -> t

(** [rev_append l r]: Reverse-append the fields of [l] to [r]. *)
val rev_append: t -> t -> t

(** [rev l]: Reverse the contents of the fields of [l]. *)
val rev: t -> t

(** [combine l r]: Do [rev_append (rev l) r]. *)
val combine: t -> t -> t

(** [flatten l]: flatten the list of changes [l]. *)
val flatten: t list -> t

(** [add_goals: inf l]: Add list [l] to the goals of [inf] *)
val add_goals: t -> ftag_ty list -> t
(** [add_aforms: inf l]: Add list [l] to the assumptions of [inf] *)
val add_aforms: t -> ftag_ty list -> t
(** [add_cforms: inf l]: Add list [l] to the conclusions of [inf] *)
val add_cforms: t -> ftag_ty list -> t
(** [add_terms: inf l]: Add list [l] to the constants of [inf] *)
val add_terms: t -> Term.term list -> t
