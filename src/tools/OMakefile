########################################################################
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this file, to deal in the File without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the File, and to permit persons to whom the
# File is furnished to do so, subject to the following condition:
#
# THE FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE FILE OR
# THE USE OR OTHER DEALINGS IN THE FILE.

########################################################################

###
# OMakefile
# Author: M Wahab <mwahab@users.sourceforge.net>
# Copyright M Wahab 2006
###

####
# Variables 
###

# TOOLS: The list of tools to build

TOOLS = hseqb

TOOLPROGS= $(Program $(TOOLS))

##
# Variables for each tool
##

# hseqb_SOURCES : The files, in order, to build the tool from
hseqb_SOURCES = hseqb.ml

# hseqb_OPTIONS: Options to pass to the compiler when building the tool
hseqb_OPTIONS = 

# hseqb_INCLUDE: include directories when building the tool
hseqb_INCLUDE =

# hseqb_LIBS: libraries to link in for the tool
hseqb_LIBS = unix.cma

# hseqb_TEMP: files generated when building the tool, which can removed
#   after the tool is build
hseqb_TEMP = hseqb.ml


##
# How to build and install a tool
##

BuildTool(tool) =
  # Settings for the tool
  OCAMLCFLAGS += $(getvar $(tool)_OPTIONS)
  OCAMLINCLUDES += $(getvar $(tool)_INCLUDE)
  OCAML_LIBS += $(getvar $(tool)_LIBS)
  INCLUDES = $`(mapprefix -I, $(OCAMLINCLUDES))

  # Build the tool
  $(tool): $(getvar $(tool)_SOURCES)
    $(OCAMLC) $(OCAMLCFLAGS) -o $(tool) $(INCLUDES) $(getvar $(tool)_LIBS) \
       $(getvar $(tool)_SOURCES)
    
InstallTool(tool) =
  # Install the tool
  $(SRCDIR)/$(tool): $(tool)
    $(COPY) $(tool) $(SRCDIR)

##
# Rules to build the tools
##

foreach (tool, $(TOOLPROGS))
  BuildTool($(tool))
  InstallTool($(tool))

##
# Build targets
##

#build: $(TOOLPROGS)

#install: $(foreach $(fun t, install-$(t)), $(TOOLPROGS))

#build-tools: install

##
# Clean-up targets
##

FullClean("", \
  $(foreach $(fun t, $(getvar $(t)_TEMP)), $(TOOLPROGS)), \
  $(TOOLPROGS))
