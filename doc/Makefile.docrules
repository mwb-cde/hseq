# -*- Makefile -*--##################################################
# Makefile.module - Makefile to build documents
# Copyright 2014, Matthew Wahab <mwb.cde@gmail.com>
#
# Released under the Lesser GPLv3 license:
# ========================================
# This file is part of HSeq.
#
# HSeq is free software; you can redistribute it and/or modify it under the
# terms of the Lesser GNU General Public License as published by the Free
# Software Foundation; either version 3, or (at your option) any later version.
#
# HSeq is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the Lesser GNU General Public License for more
# details.
#
# You should have received a copy of the Lesser GNU General Public License along
# with HSeq.  If not see <http://www.gnu.org/licenses/>.
######################################################################

########
# Tools

# MAKEINFO: The makeinfo program
ifndef MAKEINFO
MAKEINFO=makeinfo ${OPTIONS}
endif

# File tools
ifndef CP
CP=cp
endif

ifndef MKDIR
MKDIR=mkdir -p
endif

######################################################################
# Toplevel build targets
#

.PHONY: all build clean install 
all: build

build: build-doc
clean: clean-doc
install: install-doc

#####################
# Documentation
#
# template doc_TEMPLATE
# Build rules for document $(1).
# Inputs:
#   - $(1)_TEXINFO: Texinfo source files
#   - $(1)_INCLUDE: Include directory
#   - $(1)_OUTPUT: Name of the output [default: $(1)]
#   - $(1)_HTMLDIR: Name of the output html directory 
#		    [default: $($(1)_output).html]
#   - $(1)_INFODIR: Name of the output info directory 
#		    [default: $($(1)_output).info]
define doc_TEMPLATE

##
# Set variables

# The output name
$(1)_OUTPUT:=$$(or $$(strip $$($(1)_OUTPUT)),$$(strip $(1)))

# The html directory
$(1)_HTMLDIR:=$$(or $$(strip $$($(1)_HTMLDIR)),$$($(1)_OUTPUT).html)

# The info directory
$(1)_INFODIR:=$$(or $$(strip $$($(1)_INFODIR)),$$($(1)_OUTPUT).info)

# Directories to include
$(1)_INCLUDEDIR:=$$(foreach dir,$$($(1)_INCLUDE) $$(MODULE_INCLUDE),-I $$(dir))

##
# Build rules

# The html directory
$$($(1)_HTMLDIR):
	$$(MKDIR) $$($(1)_HTMLDIR)

.PHONY: $(1)-build-html
$(1)-build-html: $$($(1)_HTMLDIR) $$($(1)_TEXINFO)
	$$(MAKEINFO) --html $$($(1)_INCLUDEDIR) -o $$($(1)_HTMLDIR) \
		$$($(1)_TEXINFO)

.PHONY: $(1)-clean-html
$(1)-clean-html:
	$(RM) -r $$($(1)_HTMLDIR)

# The info directory
$$($(1)_INFODIR):
	$$(MKDIR) $$($(1)_INFODIR)

.PHONY: $(1)-build-info
$(1)-build-info: $$($(1)_INFODIR) $$($(1)_TEXINFO)
	$$(MAKEINFO) --info $$($(1)_INCLUDEDIR) -o $$($(1)_INFODIR) \
		$$($(1)_TEXINFO)

.PHONY: $(1)-clean-info
$(1)-clean-info:
	$(RM) -r $$($(1)_INFODIR)

####
# Toplevel rules
.PHONY: build-$(1) clean-$(1)

# Build
build-$(1): $(1)-build-info $(1)-build-html

# Clean
clean-$(1): $(1)-clean-info $(1)-clean-html

endef # doc_TEMPLATE

####################
# Expand documents template

$(foreach doc,$(DOCUMENTS), \
$(eval $(call doc_TEMPLATE,$(doc))))

####################
# Documentation build targets

# Build
.PHONY: build-doc build-info build-html
build-doc: $(foreach doc,$(DOCUMENTS), build-$(doc))
build-info: $(foreach doc,$(DOCUMENTS), $(doc)-build-info)
build-html: $(foreach doc,$(DOCUMENTS), $(doc)-build-html)

# Clean
.PHONY: clean-doc clean-info clean-html
clean-doc: $(foreach doc,$(DOCUMENTS), clean-$(doc))
clean-info: $(foreach doc,$(DOCUMENTS), $(doc)-clean-info)
clean-html: $(foreach doc,$(DOCUMENTS), $(doc)-clean-html)


#####################
# Documentation Subdirectories
#
# template docsubdir_TEMPLATE
# Build rules for subdir $(1).
define docsubdir_TEMPLATE

##
# Build rules

# The html directory
$$($(1)_HTMLDIR):
	$$(MKDIR) $$($(1)_HTMLDIR)

.PHONY: $(1)-build-html
$(1)-build-html: $$($(1)_HTMLDIR) $$($(1)_TEXINFO)
	$$(MAKEINFO) --html $$($(1)_INCLUDEDIR) -o $$($(1)_HTMLDIR) \
		$$($(1)_TEXINFO)

.PHONY: $(1)-clean-html
$(1)-clean-html:
	$(RM) -r $$($(1)_HTMLDIR)

# The info directory
$$($(1)_INFODIR):
	$$(MKDIR) $$($(1)_INFODIR)

.PHONY: $(1)-build-info
$(1)-build-info: $$($(1)_INFODIR) $$($(1)_TEXINFO)
	$$(MAKEINFO) --info $$($(1)_INCLUDEDIR) -o $$($(1)_INFODIR) \
		$$($(1)_TEXINFO)

.PHONY: $(1)-clean-info
$(1)-clean-info:
	$(RM) -r $$($(1)_INFODIR)

####
# Toplevel rules
.PHONY: build-$(1) clean-$(1)

# Build
build-$(1): 
	$(MAKE) -C $(1) build

# Clean
clean-$(1): 
	$(MAKE) -C $(1) clean

endef # docsubdir_TEMPLATE

####################
# Expand document subdirs template

$(foreach subdir,$(SUBDIRS), \
$(eval $(call docsubdir_TEMPLATE,$(subdir))))

####################
# Documentation subdir targets

# Build
.PHONY: build-subdir build-info build-html
build-subdir: $(foreach subdir,$(SUBDIRS), build-$(subdir))

# Clean
.PHONY: clean-subdir
clean-subdir: $(foreach subdir,$(SUBDIRS), clean-$(subdir))
